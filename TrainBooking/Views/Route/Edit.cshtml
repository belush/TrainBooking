@model TrainBooking.Models.RouteAddViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>RouteAddViewModel</legend>

        @Html.HiddenFor(model => model.Id)

        <div class="editor-label">
            @Html.LabelFor(model => model.Number)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Number)
            @Html.ValidationMessageFor(model => model.Number)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.DepatureDate)
        </div>
        <div class="editor-field">
            @*@Html.EditorFor(model => model.DepatureDate)*@
            @*@Html.TextBoxFor(model => model.DepatureDate)*@
            @Html.EditorFor(m => m.DepatureDate, "{0:dd.MM.yyyy}")
            @Html.ValidationMessageFor(model => model.DepatureDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.DepatureTime)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DepatureTime)
            @Html.ValidationMessageFor(model => model.DepatureTime)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ArrivalDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ArrivalDate)
            @Html.ValidationMessageFor(model => model.ArrivalDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ArrivalTime)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ArrivalTime)
            @Html.ValidationMessageFor(model => model.ArrivalTime)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.StartingStation)
        </div>
        <div class="editor-field">
            @*@Html.EditorFor(model => model.StartingStation)*@
            @Html.DropDownListFor(model => model.StartingStation, ViewData["stations"] as List<SelectListItem>)
            @Html.ValidationMessageFor(model => model.StartingStation)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.LastStation)
        </div>
        <div class="editor-field">
            @*@Html.EditorFor(model => model.LastStation)*@
            @Html.DropDownListFor(model => model.LastStation, ViewData["stations"] as List<SelectListItem>)
            @Html.ValidationMessageFor(model => model.LastStation)
        </div>

       
        <div class="editor-field">
            @Html.EditorFor(model => model.StartingStationRoute)
            @Html.ValidationMessageFor(model => model.StartingStationRoute)
        </div>

        
        <div class="editor-field">
            @Html.EditorFor(model => model.LastStationRoute)
            @Html.ValidationMessageFor(model => model.LastStationRoute)
        </div>

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
